// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String @unique
  first_name String?
  last_name String?
  email String
  phone_number String
  zip_code String?
  watchlist Watchlist[]
  review FilmReview[]
}

model Watchlist {
  id Int @id @default(autoincrement())
  name String
  description String
  user User @relation(fields: [user_id], references: [id])
  user_id String
  watchlist WatchlistMovie[]
  date_added DateTime @default(now())
}

model WatchlistMovie {
  id Int @id @default(autoincrement())
  movie Movie @relation(fields: [movie_id], references: [id])
  movie_id Int
  watchlist Watchlist @relation(fields: [watchlist_id], references: [id])
  watchlist_id Int
  date_added DateTime @default(now())
}

model Movie {
  id Int @id @default(autoincrement())
  name String
  tmdbid Int
  poster_url String
  release_year Int
  watchlist WatchlistMovie[]
  review FilmReview[]
} 

model FilmReview {
  id Int @id @default(autoincrement())
  user User @relation(fields: [user_id], references: [id])
  user_id String
  movie Movie @relation(fields: [movie_id], references: [id])
  movie_id Int
  watched Boolean
  watch_date DateTime @default(now())
  rating Int
  description String 
}